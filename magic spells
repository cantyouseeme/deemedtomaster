if(Fireball *f = dynamic_cast<Fireball*>(spell)){
        f->revealFirepower();
    }
    else if(Frostbite *fr = dynamic_cast<Frostbite*>(spell)){
        fr->revealFrostpower();
    }
    else if(Thunderstorm *t = dynamic_cast<Thunderstorm*>(spell)){
        t->revealThunderpower();
    }
    else if(Waterbolt *w = dynamic_cast<Waterbolt*>(spell)){
        w->revealWaterpower();
    }
    else{
        string Scroll_name = spell->revealScrollName();
        string journal = SpellJournal::read();
        size_t s_size = Scroll_name.size();
        size_t j_size = journal.size();

        if(s_size == 1 && j_size == 1 && Scroll_name == journal){
            cout << 1 << endl;
        }
        else{
            vector<vector<int>> s(s_size+1, vector<int>(j_size + 1, 0));
            for(int i = 0; i < s_size; i++ ){
                for(int j = 0; j < j_size; j++){
                    s[i+1][j+1] = max(s[i][j] + (Scroll_name[i] == journal[j]), max(s[i+1][j], s[i][j+1]));
                }
            }
            cout << s[s_size][j_size] << "\n";
        }
    }
