class Box {
	int l, b, h;
public:
	Box() : l(0), b(0), h(0) { BoxesCreated++; }
	Box(int length, int breadth, int height) : l(length), b(breadth), h(height) { BoxesCreated++; }
	Box(const Box& b) : l(b.l), b(b.b), h(b.h) { BoxesCreated++; }
	int getLength() const {
		return l;
	}
	int getBreadth() const {
		return b;
	}
	int getHeight() const {
		return h;
	}
	long long CalculateVolume() const {
		return 1LL * l * b * h;
	}
	~Box() {
		BoxesDestroyed++;
	}
	bool operator<(const Box& another) const {
		if (l != another.l) {
			return l < another.l;
		}
		if (b != another.b) {
			return b < another.b;
		}
		return h < another.h;
	}
	void output(ostream& out) const {
		out << l << " " << b << " " << h;
	}
};

ostream& operator<<(ostream& out, Box b) {
	b.output(out);
	return out;
}
